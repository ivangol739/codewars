from pprint import pprint

# 1
courses = ["Java-разработчик с нуля", "Fullstack-разработчик на Python", "Python-разработчик с нуля", "Frontend-разработчик с нуля"]
mentors = [
	["Филипп Воронов", "Анна Юшина", "Иван Бочаров", "Анатолий Корсаков", "Юрий Пеньков", "Илья Сухачев", "Иван Маркитан", "Ринат Бибиков", "Вадим Ерошевичев", "Тимур Сейсембаев", "Максим Батырев", "Никита Шумский", "Алексей Степанов", "Денис Коротков", "Антон Глушков", "Сергей Индюков", "Максим Воронцов", "Евгений Грязнов", "Константин Виролайнен", "Сергей Сердюк", "Павел Дерендяев"],
	["Евгений Шмаргунов", "Олег Булыгин", "Александр Бардин", "Александр Иванов", "Кирилл Табельский", "Александр Ульянцев", "Роман Гордиенко", "Адилет Асканжоев", "Александр Шлейко", "Алена Батицкая", "Денис Ежков", "Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Максим Филипенко", "Елена Никитина"],
	["Евгений Шмаргунов", "Олег Булыгин", "Дмитрий Демидов", "Кирилл Табельский", "Александр Ульянцев", "Александр Бардин", "Александр Иванов", "Антон Солонилин", "Максим Филипенко", "Елена Никитина", "Азамат Искаков", "Роман Гордиенко"],
	["Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Валерий Хаслер", "Татьяна Тен", "Александр Фитискин", "Александр Шлейко", "Алена Батицкая", "Александр Беспоясов", "Денис Ежков", "Николай Лопин", "Михаил Ларченко"]
]
durations = [14, 20, 12, 20]

# В этот список будут добавляться словари-курсы
courses_list = []
# Допишите код, который генерирует словарь-курс с тремя ключами: "title", "mentors", "duration"
for i in zip(courses, mentors, durations):
	course_dict = {"title": i[0], "mentors": i[1], "duration": i[2]}
	courses_list.append(course_dict)

# Найдите самое маленькое и самое большое значение длительности курса
# Подсказка: используйте функции min и max для списка durations
min = min(durations)
max = max(durations)

# Как видите, в duration встречаются одинаковые длительности курса. Допишите код, который это учитывает
# Подсказка 1: найдите индексы, по которым в списке durations встречается самое маленькое и самое большое значение
# Подсказка 2: не забудьте, что индекс можно удобно получить функцией enumerate
maxes = []
minis = []
for idx, i in enumerate(durations):
	if i == max:
		maxes.append(idx)
	elif i == min:
		minis.append(idx)

# Соберите все названия самых коротких и самых длинных курсов
# Так как курсов с одной длительностью может быть больше одного,
# создайте список названий самых коротких (courses_min) и самых длинных (courses_max) курсов
courses_min = []
courses_max = []
for id in minis:
	courses_min.append(courses_list[id]['title']) # Допишите код, который берёт по id нужный курс из courses_list и получает название курса из ключа "title"
for id in maxes:
	courses_max.append(courses_list[id]['title']) # По аналогии допишите такой же код для курсов максимальной длительности


# Допишите конструкцию вывода результата. Можете использовать string.join()
# print(f"Самый короткий курс(ы): {', '.join(courses_min)} - {min} месяца(ев)")
# print(f"Самый длинный курс(ы): {', '.join(courses_max)} - {max} месяца(ев)")

# 2

# Наводим порядок: упорядочиваем курсы по продолжительности

courses = ["Java-разработчик с нуля", "Fullstack-разработчик на Python", "Python-разработчик с нуля", "Frontend-разработчик с нуля"]
mentors = [
	["Филипп Воронов", "Анна Юшина", "Иван Бочаров", "Анатолий Корсаков", "Юрий Пеньков", "Илья Сухачев", "Иван Маркитан", "Ринат Бибиков", "Вадим Ерошевичев", "Тимур Сейсембаев", "Максим Батырев", "Никита Шумский", "Алексей Степанов", "Денис Коротков", "Антон Глушков", "Сергей Индюков", "Максим Воронцов", "Евгений Грязнов", "Константин Виролайнен", "Сергей Сердюк", "Павел Дерендяев"],
	["Евгений Шмаргунов", "Олег Булыгин", "Александр Бардин", "Александр Иванов", "Кирилл Табельский", "Александр Ульянцев", "Роман Гордиенко", "Адилет Асканжоев", "Александр Шлейко", "Алена Батицкая", "Денис Ежков", "Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Максим Филипенко", "Елена Никитина"],
	["Евгений Шмаргунов", "Олег Булыгин", "Дмитрий Демидов", "Кирилл Табельский", "Александр Ульянцев", "Александр Бардин", "Александр Иванов", "Антон Солонилин", "Максим Филипенко", "Елена Никитина", "Азамат Искаков", "Роман Гордиенко"],
	["Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Валерий Хаслер", "Татьяна Тен", "Александр Фитискин", "Александр Шлейко", "Алена Батицкая", "Александр Беспоясов", "Денис Ежков", "Николай Лопин", "Михаил Ларченко"]
]
durations = [14, 20, 12, 20]

courses_list = []
for course, mentor, duration in zip(courses, mentors, durations):
	course_dict = {"title":course, "mentors":mentor, "duration":duration}
	courses_list.append(course_dict)



durations_dict = {}

for id, i in enumerate(courses_list):
  key = i.get('duration') 

  if key not in durations_dict:
    durations_dict[key] = []
  durations_dict[key].append(id)


durations_dict = dict(sorted(durations_dict.items()))

for key, value in durations_dict.items():
  for idx in value:
    course = courses_list[idx]['title']
    # print(f'{course} - {key} месяцев')


# 3

courses = ["Java-разработчик с нуля", "Fullstack-разработчик на Python", "Python-разработчик с нуля", "Frontend-разработчик с нуля"]
mentors = [
	["Филипп Воронов", "Анна Юшина", "Иван Бочаров", "Анатолий Корсаков", "Юрий Пеньков", "Илья Сухачев", "Иван Маркитан", "Ринат Бибиков", "Вадим Ерошевичев", "Тимур Сейсембаев", "Максим Батырев", "Никита Шумский", "Алексей Степанов", "Денис Коротков", "Антон Глушков", "Сергей Индюков", "Максим Воронцов", "Евгений Грязнов", "Константин Виролайнен", "Сергей Сердюк", "Павел Дерендяев"],
	["Евгений Шмаргунов", "Олег Булыгин", "Александр Бардин", "Александр Иванов", "Кирилл Табельский", "Александр Ульянцев", "Роман Гордиенко", "Адилет Асканжоев", "Александр Шлейко", "Алена Батицкая", "Денис Ежков", "Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Максим Филипенко", "Елена Никитина"],
	["Евгений Шмаргунов", "Олег Булыгин", "Дмитрий Демидов", "Кирилл Табельский", "Александр Ульянцев", "Александр Бардин", "Александр Иванов", "Антон Солонилин", "Максим Филипенко", "Елена Никитина", "Азамат Искаков", "Роман Гордиенко"],
	["Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Валерий Хаслер", "Татьяна Тен", "Александр Фитискин", "Александр Шлейко", "Алена Батицкая", "Александр Беспоясов", "Денис Ежков", "Николай Лопин", "Михаил Ларченко"]
]
durations = [14, 20, 12, 20]

courses_list = []
for course, mentor, duration in zip(courses, mentors, durations):
	course_dict = {"title":course, "mentors":mentor, "duration":duration}
	courses_list.append(course_dict)
 
duration_index = []
mcount_index = []
for index, course in enumerate(courses_list):
  duration_index.append([course['duration'], index])
  mcount_index.append([len(course['mentors']), index]) 
  
duration_index.sort()
mcount_index.sort()

indexes_d = []
indexes_m = []

# Допишите код ниже:
for i in duration_index:
	indexes_d.append(i[1])

for i in mcount_index:
  indexes_m.append(i[1])

# print("Связь есть" if indexes_m == indexes_d else "Связи нет")
# print(f"Порядок курсов по длительности: {indexes_d}")
# print(f"Порядок курсов по количеству преподавателей: {indexes_m}")


#4

#  этом задании вы должны для каждого курса в отдельности подсчитать, сколько на нём встречается преподавателей-тёзок — людей с одинаковыми именами и разными фамилиями.

# После того как все тёзки обнаружены, вы должны вывести название курса и список преподавателей-тёзок (с именем и фамилией в алфавитном порядке), которые обучают студентов в рамках этого курса.

# Как назвать переменные, решайте сами (советуем выбирать максимально осмысленные имена). Вы можете придумать свой алгоритм, отличный от предложенного.

# Важно соблюдать следующий формат вывода:

# На курсе Java-разработчик с нуля есть тёзки: Иван Бочаров, Иван Маркитан, ...
# На курсе Fullstack-разработчик на Python есть тёзки: Александр Бардин, Александр Иванов, ...
# На курсе Python-разработчик с нуля есть тёзки: Александр Бардин, Александр Ульянцев, ...
# На курсе Frontend-разработчик с нуля есть тёзки: Александр Фитискин, Александр Шлейко, ...
# Это задание поможет вам систематизировать знания по словарям, множествам и спискам, а также потренироваться в создании сложных алгоритмов, поэтому вы увидите только общую структуру-намёк, каким может быть алгоритм.

courses = ["Java-разработчик с нуля", "Fullstack-разработчик на Python", "Python-разработчик с нуля", "Frontend-разработчик с нуля"]
mentors = [
	["Филипп Воронов", "Анна Юшина", "Иван Бочаров", "Анатолий Корсаков", "Юрий Пеньков", "Илья Сухачев", "Иван Маркитан", "Ринат Бибиков", "Вадим Ерошевичев", "Тимур Сейсембаев", "Максим Батырев", "Никита Шумский", "Алексей Степанов", "Денис Коротков", "Антон Глушков", "Сергей Индюков", "Максим Воронцов", "Евгений Грязнов", "Константин Виролайнен", "Сергей Сердюк", "Павел Дерендяев"],
	["Евгений Шмаргунов", "Олег Булыгин", "Александр Бардин", "Александр Иванов", "Кирилл Табельский", "Александр Ульянцев", "Роман Гордиенко", "Адилет Асканжоев", "Александр Шлейко", "Алена Батицкая", "Денис Ежков", "Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Максим Филипенко", "Елена Никитина"],
	["Евгений Шмаргунов", "Олег Булыгин", "Дмитрий Демидов", "Кирилл Табельский", "Александр Бардин","Александр Ульянцев", "Александр Иванов", "Антон Солонилин", "Максим Филипенко", "Елена Никитина", "Азамат Искаков", "Роман Гордиенко"],
	["Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Валерий Хаслер", "Татьяна Тен", "Александр Фитискин", "Александр Шлейко", "Алена Батицкая", "Александр Беспоясов", "Денис Ежков", "Николай Лопин", "Михаил Ларченко"]
]
durations = [14, 20, 12, 20]

courses_list = []
for course, mentor, duration in zip(courses, mentors, durations):
	course_dict = {"title":course, "mentors":mentor, "duration":duration}
	courses_list.append(course_dict)

	for course in courses_list:
		unique_names = sorted({name.split()[0] for name in course["mentors"]})

	names_set_count = {name: 0 for name in unique_names}
 
	for name in course["mentors"]:
		first_name = name.split()[0]
		names_set_count[first_name] += 1
  
	same_name_list = []
	for name in unique_names:
		if names_set_count[name] > 1:
			for full_name in course["mentors"]:
				if name in full_name:
					same_name_list.append(full_name)
	if same_name_list:
		print(f"На курсе {course['title']} есть тёзки: {', '.join(sorted(same_name_list))}")